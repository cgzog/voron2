# This file contains common pin mappings for the BigTreeTech Octopus Pro V1.0.
# To use this config, the firmware should be compiled for the STM32F446 with a "32KiB bootloader"
# Enable "extra low-level configuration options" and select the "12MHz crystal" as clock reference

# after running "make", copy the generated "klipper/out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the OctoPus with that SD card.

# See docs/Config_Reference.md for a description of parameters.

## Voron Design VORON2 250/300/350mm BigTreeTech OctoPus Pro TMC2209 UART config

## *** THINGS TO CHANGE/CHECK: ***
## MCU paths                            [mcu] section
## Thermistor types                     [extruder] and [heater_bed] sections - See 'sensor types' list at end of file
## Z Endstop Switch location            [safe_z_home] section
## Homing end position                  [gcode_macro G32] section
## Z Endstop Switch  offset for Z0      [stepper_z] section
## Probe points                         [quad_gantry_level] section
## Min & Max gantry corner postions     [quad_gantry_level] section
## PID tune                             [extruder] and [heater_bed] sections
## Thermistor types                     [extruder] and [heater_bed] sections
## Probe pin                            [probe] section
## Fine tune E steps                    [extruder] section

[include fluidd.cfg]

[mcu]
##  Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
##--------------------------------------------------------------------
## serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_18003E00095053424E363420-if00
serial: /dev/ttyACM0
restart_method: command
##--------------------------------------------------------------------

[printer]
kinematics: corexy
max_velocity: 300  
max_accel: 3500             # was 7000 - dropped to <3800 based on Y shaper (X was < 6800)
max_accel_to_decel: 3800    #Max 4000
max_z_velocity: 15          #Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 350
square_corner_velocity: 5.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  B Stepper - Left
##  Connected to MOTOR_0
##  Endstop connected to DIAG_0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG13
position_min: 0
position_endstop: 338        # was 347 but KBUSA accel hit the left gantry joint
position_max: 338            # this leaves about 2mm clearance

##--------------------------------------------------------------------
homing_speed: 25   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
uart_pin: PC4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  A Stepper - Right
##  Connected to MOTOR_1
##  Endstop connected to DIAG_1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
rotation_distance: 40
microsteps: 32
full_steps_per_rotation:200  #set to 400 for 0.9 degree stepper
endstop_pin: PG9
position_min: 0
##--------------------------------------------------------------------

##  Uncomment for 350mm build
position_endstop: 355
position_max: 355

##--------------------------------------------------------------------
homing_speed: 25  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
uart_pin: PD11
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0
 
#####################################################################
#   Z Stepper Settings
#####################################################################

## Z0 Stepper - Front Left
##  Connected to MOTOR_2
##  Endstop connected to DIAG_2
[stepper_z]
step_pin: PF11
dir_pin: PG3
enable_pin: !PG5
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32
endstop_pin: probe:z_virtual_endstop
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop: -0.5
##--------------------------------------------------------------------

##  Uncomment below for 350mm build
position_max: 315

##--------------------------------------------------------------------
position_min: -5
homing_speed: 5
second_homing_speed: 2		; down from 3
homing_retract_dist: 3

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: PC6
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z1 Stepper - Rear Left
##  Connected to MOTOR_3
[stepper_z1]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: PC7
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z2 Stepper - Rear Right
##  Connected to MOTOR_4
[stepper_z2]
step_pin: PF9
dir_pin: PF10
enable_pin: !PG2
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: PF2
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0

##  Z3 Stepper - Front Right
##  Connected to MOTOR_5
[stepper_z3]
step_pin: PC13
dir_pin: !PF0
enable_pin: !PF1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 32

##  Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: PE4
interpolate: false
run_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Extruder and Extruder Stepper
#####################################################################

#   Connected to MOTOR_6
#   Heater - HE0
#   Thermistor - T0

[thermistor ATC Semitec 104NT-4-R025H42G]
temperature1: 25
resistance1: 100000
temperature2: 160
resistance2: 1074
temperature3: 300
resistance3: 82.78

[include extruder_galileo2.cfg]


#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - HE1
##  Thermistor - TB
heater_pin: PA3
##  Validate the following thermistor type to make sure it is correct
##  See https://www.klipper3d.org/Config_Reference.html#common-thermistors for additional options
sensor_type: NTC 100K MGB18-104F39050L32
sensor_pin: PF3
##  Adjust Max Power so your heater doesn't warp your bed. Rule of thumb is 0.4 watts / cm^2 .
max_power: 0.6
min_temp: 0
max_temp: 110
#pwm_cycle_time: 0.016666
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

#####################################################################
#   Probe
#####################################################################

[probe]
##  Inductive Probe
##  This probe is not used for Z height, only Quad Gantry Leveling

## Select the probe port by type:
## For the PROBE port. Will not work with Diode. May need pull-up resistor from signal to 24V.
#pin: ~!PB7
## For the DIAG_7 port. NEEDS BAT85 DIODE! Change to !PG15 if probe is NO.
# pin: PG15
## For Octopus Pro PROBE port; NPN and PNP proximity switch types can be set by jumper
pin: !PG15

#--------------------------------------------------------------------

x_offset: 0.0
y_offset: 0.0
#z_offset: 0.0
speed: 5.0
samples: 3
samples_result: median
sample_retract_dist: 3.0
samples_tolerance: 0.006
samples_tolerance_retries: 3

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

#####################################################################
#   Other temperature readings like RPi, chamber, and controller MCU
#####################################################################

[temperature_sensor Raspberry_Pi]
sensor_type: temperature_host

[temperature_sensor chamber]
sensor_type: ATC Semitec 104GT-2
sensor_pin: PF5

[temperature_sensor Electronics_bay]
sensor_type: ATC Semitec 104GT-2
sensor_pin: PF6

[temperature_sensor octopus_pro]
sensor_type: temperature_mcu
sensor_mcu: mcu

#####################################################################
#   Fan Control
#####################################################################

[fan]
##  Print Cooling Fan - FAN0
pin: PA8
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan hot_end_fan]
##  Hotend Fan - FAN1
pin: PE5
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
##  If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

[controller_fan electronics_bay_fan]
##  Controller fan - FAN2
pin: PD12
kick_start_time: 0.5
heater: heater_bed

[fan_generic chamber_fan]
pin: PD15
kick_start_time: 0.2

[fan_generic exhaust_fan]
pin: PD13
kick_start_time: 0.5

[fan_generic nevermore_fan]
pin: PD14
kick_start_time: 0.5
max_power: 0.75

[fan_generic bed_fans]
pin: PB11
kick_start_time: 0.5

#[heater_fan exhaust_fan]
##  Exhaust fan - FAN3
#pin: PD13
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 1.0

#####################################################################
#   LED Control
#####################################################################

#[output_pin caselight]
# Chamber Lighting - HE2 Connector (Optional)
#pin: PB10
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
#   Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 3600

[safe_z_home]
##  XY Location of the Z Endstop Switch
##  Update -10,-10 to the XY coordinates of your endstop pin 
##  (such as 157,305) after going through Z Endstop Pin
##  Location Definition step.
#
# based on 350 x 350 endstop locations
home_xy_position: 175, 175
speed:100
z_hop:10

[quad_gantry_level]
##  Use QUAD_GANTRY_LEVEL to level a gantry.
##  Min & Max gantry corners - measure from nozzle at MIN (0,0) and 
##  MAX (250, 250), (300,300), or (350,350) depending on your printer size
##  to respective belt positions

##  Gantry Corners for 350mm Build
gantry_corners:
   -60,-10
   410,420
#  Probe points
points:
   50,25
   50,275
   300,275
   300,25

#--------------------------------------------------------------------
speed: 100
horizontal_move_z: 10
retries: 5
retry_tolerance: 0.0075
max_adjust: 10

########################################
# EXP1 / EXP2 (display) pins
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,

    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=<5V>

#####################################################################
#   Displays
#####################################################################

[display]
#  mini12864 LCD Display
lcd_type: uc1701
cs_pin: EXP1_3
a0_pin: EXP1_4
rst_pin: EXP1_5
encoder_pins: ^EXP2_3, ^EXP2_5
click_pin: ^!EXP1_2
contrast: 63
spi_software_miso_pin: EXP2_1
spi_software_mosi_pin: EXP2_6
spi_software_sclk_pin: EXP2_2

##  Set RGB values on boot up for each Neopixel. 
##  Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
#        SET_LED LED=btt_mini12864 RED=1 GREEN=1 BLUE=1 INDEX=1 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0
#        SET_LED LED=btt_mini12864 RED=1 GREEN=0 BLUE=0 INDEX=3 

#--------------------------------------------------------------------


[bed_mesh]
speed: 300
horizontal_move_z: 10
mesh_min: 40, 40
mesh_max: 310, 310
fade_start: 0.6
fade_end: 10.0
probe_count: 5,5
algorithm: bicubic
#relative_reference_index: 12		; deprecated

[adxl345]
cs_pin: None

[resonance_tester]
accel_chip: adxl345
probe_points:
    175,175,20  # an example


# Enables input shaping.
[input_shaper]
shaper_freq_x: 36.4
#   A frequency (in Hz) of the input shaper for X axis. This is usually a
#   resonance frequency of X axis that the input shaper should suppress.
#   For more complex shapers, like 2- and 3-hump EI input shapers, this
#   parameter can be set from different considerations.
#   The default value is 0, which disables input shaping for X axis.
shaper_freq_y: 55.6
#   A frequency (in Hz) of the input shaper for Y axis. This is usually a
#   resonance frequency of Y axis that the input shaper should suppress.
#   For more complex shapers, like 2- and 3-hump EI input shapers, this
#   parameter can be set from different considerations.
#   The default value is 0, which disables input shaping for Y axis.
shaper_type: ei
#   A type of the input shaper to use for both X and Y axes. Supported shapers
#   are zv, mzv, zvd, ei, 2hump_ei, and 3hump_ei.
#   The default is mzv input shaper.
#shaper_type_x:
#shaper_type_y:
#   If shaper_type is not set, these two parameters can be used to configure
#   different input shapers for X and Y axes. The same values are supported
#   as for shaper_type parameter.
#damping_ratio_x: 0.1
#damping_ratio_y: 0.1
#   Damping ratios of vibrations of X and Y axes used by input shapers to
#   improve vibration suppression. Should not be changed without some proper
#   measurements, e.g. with an accelerometer.
#   Default value is 0.1 which is a good all-round value for most printers.


#####################################################################
#   Macros
#####################################################################

[pause_resume]

[gcode_macro M600]
gcode:
    {% set E = params.E|default(5)|float %}
    {% set U = params.U|default(50)|float %}
    {% set X = params.X|default(100)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-{E} F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-{U} F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro G32]
gcode:
    BED_MESH_CLEAR
    STATUS_HOMING
    G28 XY
    STATUS_CALIBRATING_Z
    G28 Z
    STATUS_LEVELING
    QUAD_GANTRY_LEVEL
    STATUS_HOMING
    G28 XY
    STATUS_CALIBRATING_Z
    G28 Z
    STATUS_READY
    BED_MESH_PROFILE LOAD=default
    G90

[gcode_macro PRINT_START]
gcode:
 
    G32                       ; home all axes and QGL - happens COLD!

    G1 Z10 F3000              ; move nozzle away from bed

[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear

    RESPOND TYPE=command MSG='Retracting and Wiping...'
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G1 E-10.0
    G1 E-10.0
    G1 E-5.0                       ; 35mm total
    
    G91                            ; change to relative positioning
    G1 Z5                          ; move up 5mm to clear the just printed part
    G90                            ; back to absolute positioning
    G1 X175 Y350 F4000             ; move to the back center of the print bed
    WIPE_NOZZLE                    ; now the nozzle wipe move will be clear of the part

    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X175 Y350 Z25                         ; rear center and up for clearance to remove the build plate

    #G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    #G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 2} F3600  ; park nozzle at rear

    SET_LED LED=Chamber RED=0.4 BLUE=0.4 GREEN=0.3
    STATUS_COMPLETED

    _TURN_OFF_FANS
    
    # wait for 30 seconds to get the last frame into the timelaps video
    # G04 P30000                             ; klipper doesn't have this?

    # BED_MESH_CLEAR
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
variable_park: True
gcode:
    ## Move head and retract only if not already in the pause state and park set to true

    {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
      _TOOLHEAD_PARK_PAUSE_CANCEL
    {% endif %}

    RESPOND TYPE=command MSG='Cancelling...'
    G92 E0                         ; zero the extruder
    G1 E-10.0 F3600                ; retract filament
    G1 E-10.0
    G1 E-10.0
    G1 E-5.0                       ; 35mm total

    G91                            ; relative movement
    G0 Z5                          ; clear the part
    G90                            ; absolute
    G0 Y350                        ; move to the back
    WIPE_NOZZLE

    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X175 Y350 Z25                         ; rear center and up for clearance to remove the build plate

    BASE_CANCEL_PRINT                        ; invoke the existing functionality

    _TURN_OFF_FANS

[gcode_macro _TURN_OFF_FANS]
gcode:
    M107                                     ; turn off fan
    SET_FAN_SPEED FAN=chamber_fan SPEED=0    ; turn off chamber fan
    SET_FAN_SPEED FAN=exhaust_fan SPEED=0    ; turn off exhaust fan
    SET_FAN_SPEED FAN=nevermore_fan SPEED=0  ; turn off nevermore fan
    SET_FAN_SPEED FAN=bed_fans SPEED=0       ; turn off bed fans fan

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
    ##### set park positon for x and y #####
    # default is your max position from your printer.cfg
  
    # {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    # {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}

    {% set x_park = 175 %}
    {% set y_park = printer.toolhead.axis_maximum.y %}
    {% set z_park_delta = 10.0 %}

    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - z_park_delta) %}
      {% set z_safe = z_park_delta %}
    {% else %}
      {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####

    {% if printer.extruder.can_extrude|lower == 'true' %}
      M83
      G1 E-{extrude} F2100
      {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G91
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
      {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}

[gcode_macro POST_PRINT_START]
gcode:
    # code for after S3D sets the extruder temp
    STATUS_CLEANING
    RESPOND TYPE=command MSG='Priming, purging, wiping...'
    PRIME_NOZZLE
    PURGE_NOZZLE
    WIPE_NOZZLE
    STATUS_PRINTING

[gcode_macro WIPE_NOZZLE]
gcode:
    #
    # wipe
    #
    G1 X325 Y355 Z3 F3600     ; move to right side of brush and set Z height
    G1 X275 F2000             ; wipe in the X dir right to left
    G1 X325 F2000             ; wipe in the X dir left to right
    G1 X275 F2000
    G1 X325 F2000

[gcode_macro PURGE_NOZZLE]
gcode:

    # position over the purge bucket

    G1 X338 Y355 Z3 F3600

    # purge 40mm to make sure we're running this is in addition
    # to the filament fed in PRIME_NOZZLE which just gets us back to
    # we were at the end of the previous print
    #
    # here we'll extrude extra filament into the purge bucket to make
    # sure we are ready to print as soon as we move to the first
    # extrusion position

    G1 E10 F20
    G1 E10 F20
    G1 E10 F20
    G1 E10 F20

[gcode_macro PRIME_NOZZLE]
gcode:
    #
    # prime
    #
    G92 E0                      ; zero the extruder
    G1 E10.0 F3600              ; advance the filament the amount we retracted in PRINT_END
    G1 E10.0
    G1 E10.0
    G1 E7.0                     ; 37 total - 2 more than the retraction to make sure we going

[gcode_macro LOAD_FILAMENT]
variable_load_distance:  50
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E{load_distance} F{max_velocity} # fast-load
    G1 E{purge_distance} F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
variable_unload_distance:  50
variable_purge_distance:  25
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity  * 60 %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E{purge_distance} F{speed} # purge
    G1 E-{unload_distance} F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state

[respond]
#default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".

[input_shaper]
shaper_freq_x: 48.4
shaper_type_x: mzv
shaper_freq_y: 33.6
shaper_type_y: mzv

[virtual_sdcard]
path: ~/printer_data/gcodes

[display_status]

[include leds.cfg]

[include timelapse.cfg]

# Enable ONLY when doing resonance testing
#[include adxlmcu.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 39.079
#*# pid_ki = 0.901
#*# pid_kd = 423.518
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 38.165
#*# pid_ki = 5.301
#*# pid_kd = 68.697
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.097044, 0.159544, 0.174544, 0.165794, 0.145794
#*# 	0.045794, 0.090794, 0.134544, 0.137044, 0.099544
#*# 	0.054544, 0.094544, 0.085794, 0.093294, 0.045794
#*# 	0.097044, 0.140794, 0.130794, 0.105794, 0.063294
#*# 	0.140794, 0.192044, 0.172044, 0.147044, 0.129544
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 40.0
#*# x_count = 5
#*# max_y = 310.0
#*# mesh_x_pps = 2
#*# max_x = 310.0
#*#
#*# [probe]
#*# z_offset = -0.240
